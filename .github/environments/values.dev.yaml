---
features:
  basicAuth: true
  defaultBucket: false
  oidcAuth: true

autoscaling:
  enabled: true
  maxReplicas: 4

config:
  enabled: true
  configMap:
    BASICAUTH_ENABLED: "true"
    DB_PORT: "5432"
    KC_ENABLED: "true"
    KC_IDENTITYKEY: idir_user_guid,bceid_user_guid,github_id
    KC_PUBLICKEY: >-
      MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuy7zfh2ZgpDV5mH/aXyLDTddZK81rGakJcTy4KvCNOkDDxt1KAhW02lmbCo8YhHCOzjNZBp1+Vi6QiMRgBqAe2GTPZYEiV70aXfROGZe3Nvwcjbtki6HoyRte3SpqLJEIPL2F+hjJkw1UPGnjPTWZkEx9p74b9i3BjuE8RnjJ0Sza2MWw83zoQUZEJRGiopSL0yuVej6t2LO2btVdVf7QuZfPt9ehkcQYlPKpVvJA+pfeqPAdnNt7OjEIeYxinjurZr8Z04hz8UhkRefcWlSbFzFQYmL7O7iArjW0bsSvq8yNUd5r0KCOQkFduwZy26yTzTxj8OLFT91fEmbBBl4rQIDAQAB
    KC_REALM: standard
    KC_SERVERURL: "https://dev.loginproxy.gov.bc.ca/auth"
    # SERVER_LOGFILE: ~
    SERVER_LOGLEVEL: http
    SERVER_PORT: "3000"
    SERVER_PRIVACY_MASK: "true"
    SERVER_TEMP_EXPIRESIN: "300"

postgres:
  enabled: true

  # --------------------------------
  # --------crunchydb config: ------
  # --------------------------------

  # --- cluster resource allocation ----
  instances:
    - name: db # do not change this name after initial install, pvc (data) and stateful sets will be deleted
      replicas: 2
      dataVolumeClaimSpec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 1Gi
        storageClassName: "netapp-block-standard"
      resources:
        requests:
          cpu: 1m
          memory: 256Mi
        limits:
          cpu: 100m
          memory: 512Mi

  # -------- backups ---------
  # # (move all in backups section to values-prod eventually)
  # pgBackRest:
  #   # 'backups to "volume" are hard-coded (enabled) in the PostgresCluster template (see: repo1)
  #   retention: "2"
  #   retentionFullType: count
  #   repos:
  #     schedules:
  #       full: 0 8 * * *
  #       incremental: 0 0,4,12,16,20 * * *
  #     volume:
  #       # enable backups to volume (pvc)
  #       enabled: true
  #       accessModes: ReadWriteOnce
  #       storage: 2Gi
  #       storageClassName: netapp-file-backup
  #   # backups to S3 are also hard-coded in postgresCluster template (see repo2)
  #   s3:
  #     # enable backups to s3
  #     enabled: true
  #     createS3Secret: true
  #     s3Secret: s3-pgbackrest
  #     s3Path: "/habackup"
  #     s3UriStyle: path
  #     bucket: "bucketName"
  #     endpoint: "endpointName"
  #     region: "ca-central-1"
  #     key: "s3keyValue"
  #     keySecret: "s3SecretValue"
  #     fullSchedule: "0 9 * * *"
  #     incrementalSchedule: "0 1,5,13,17,21 * * *"

  # pgBackRestConfig allows for the configuration of every pgBackRest option
  # except for "image", which is set by "pgBackRest".
  pgBackRestConfig:
    global:
      repo1-retention-full: "4"
      repo1-retention-full-type: "count"
    repos:
      - name: repo1
        schedules:
          # Full backup weekly on Sunday at 1am or 2am (9am UTC) and
          # Differential backups daily at 1am or 2am (9am UTC) on every day except Sunday,
          # Incremental backups every hour except for 9am UTC
          # be sure to configure these not to run at the same time
          full: "0 9 * * 0"
          differential: "0 9 * * 1-6"
          incremental: "0 0-8,10-23 * * *"
        volume:
          volumeClaimSpec:
            accessModes:
              - "ReadWriteOnce"
            resources:
              requests:
                storage: 2Gi
            storageClassName: "netapp-file-backup"
    # this stuff is for the "pgbackrest" container (the only non-init container) in the "postgres-crunchy-repo-host" pod
    repoHost:
      resources:
        requests:
          cpu: 1m
          memory: 64Mi
        limits:
          cpu: 50m
          memory: 128Mi
    sidecars:
      # this stuff is for the "pgbackrest" container in the "postgres-crunchy-ha" set of pods
      pgbackrest:
        resources:
          requests:
            cpu: 1m
            memory: 64Mi
          limits:
            cpu: 50m
            memory: 128Mi
